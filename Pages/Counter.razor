@page "/counter"

<h1>Game of Live</h1>

<p>Current count: @currentCount and current radio @theRadio</p>
<hr>
@{
    //initial pattern
    //dotnet watch run
    if(currentCount == 0){
        e.put_pattern(6,6,"pentadecathlon");
    }
    int svgh = e.total_of_rows()*9+2;
    int svgw = e.total_of_cols()*9+2;

}
<svg width="@svgw" height="@svgh">
    <defs>
        <filter id="myBlur" x="0" y="0">
            <feGaussianBlur in="SourceGraphic" stdDeviation="3"/>
        </filter>
    </defs>
    @for(var i=0; i< @e.total_of_rows(); i++){
        for(var j=0; j< @e.total_of_cols();j++){
            int cy = (i*9+4+1);
            int cx = (j*9+4+1);
            int idx = i;
            int jdx = j;
            @if(e.biounit(i,j)!=null){
                <circle cx="@cx" cy="@cy" r="4" fill="#90FA90"
                filter="url{#myBlur}" @onclick="() => CellClick(idx,jdx)"/>
            }else {
                <circle cx="@cx" cy="@cy" r="4" fill="#909090"
                filter="url{#myBlur}" @onclick="() => CellClick(idx,jdx)"/>
            }
        }
    }
</svg>
@* <table class="environment">
    @for(var i=0; i<@e.total_of_rows(); i++) {
        <tr>
            @for(var j=0; j<@e.total_of_cols(); j++) {
                @if(e.biounit(i,j)!=null) {
                    <td class="cell" style="background-color:@e.biounit(i,j).myColor()"></td>
                }
                else{
                    <td class="cell dead"></td>
                }
            }
        </tr>
    }
</table> *@
<p>
    <input type="radio" name="myradiobtn"
        checked="@(theRadio.Equals("step"))"
        value = "step"
        @onchange="ClickRadio"/> Step by step

    <input type="radio" name="myradiobtn"
        checked="@(theRadio.Equals("many"))"
        value = "many"
        @onchange="ClickRadio"/> Several steps

</p>
<div style="display:@(theRadio.Equals("many")?"":"none")">
    <h5>Cycles specification</h5>
    Number of Cycles
    <input @bind="cyclesPerTime"/> (internal value: @cyclesPerTime))
    <br>
    <select @bind="option">
        <option value="1">1 st </option>
        <option value="2">2 st </option>
        <option value="3">3 st </option>
    </select>
    <br>
    Our option is @option
</div>
<hr>
<button class="btn btn-primary" @onclick="IncrementCount">Next</button>
<button class="btn btn-primary" @onclick="PatternManagement">@title</button>
<a
    class="btn btn-primary"
    href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life"
    target="_blank">
    Look for Patterns in Wikipedia

</a>
<br>
<br>
<div class="PentaPatt" style="display: @(pentaDisplay); width: 45em; height:3em; border: 1px solid #000; margin-bottom: 10px; text-align:center; padding:5px;">
    row <input type="text" style="width: 10em;" @bind="xVal">
    col <input type="text" style="width: 10em;" @bind="yVal">
    
    <select @bind="patternName">
        <option value="pentadecathlon">pentadecathlon </option>
        <option value="mypattern">mypattern</option>
        <option value="LWSS">LWSS </option>
    </select>

    <button class="btn btn-primary" @onclick="AddPattern">Add</button>
</div>

@code {
    private int currentCount = 0;
    private Data.BioUnit u;
    private Data.Environment e = new Data.Environment(30,30);
    private string theRadio ="";
    private int cyclesPerTime = 0;
    private string option = "";
    private string title = "Add pattern...";
    private string pentaDisplay ="none";
    private int xVal;
    private int yVal;
    private string patternName ="";

    private bool CellClick(int row, int col){
        e.onOff(row,col);
        return true;
    }

    private void IncrementCount()
    {
        currentCount++;
        e.nextConwayStep();
    }

    private void ClickRadio(ChangeEventArgs args){
        theRadio = args.Value.ToString();
        currentCount++;
    }

    private void PatternManagement(){
        if(title=="Add pattern..."){
            pentaDisplay ="block";
            title = "Add pattern(-)";
        }else{
            pentaDisplay="none";
            title="Add pattern...";
        }
    }

    private void AddPattern(){
        e.put_pattern(xVal,yVal,patternName);
        xVal=0;
        yVal=0;
    }
}
